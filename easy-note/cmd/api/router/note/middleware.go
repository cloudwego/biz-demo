// Copyright 2022 CloudWeGo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by hertz generator.

package note

import (
	"context"
	"fmt"

	"easy-note/cmd/api/router"
	"easy-note/pkg/errno"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/middlewares/server/recovery"
	"github.com/cloudwego/hertz/pkg/common/hlog"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/hertz-contrib/requestid"
)

func rootMw() []app.HandlerFunc {
	// your code...
	return []app.HandlerFunc{
		recovery.Recovery(recovery.WithRecoveryHandler(
			func(ctx context.Context, c *app.RequestContext, err interface{}, stack []byte) {
				hlog.SystemLogger().CtxErrorf(ctx, "[Recovery] err=%v\nstack=%s", err, stack)
				c.JSON(consts.StatusInternalServerError, map[string]interface{}{
					"code":    errno.ServiceErrCode,
					"message": fmt.Sprintf("[Recovery] err=%v\nstack=%s", err, stack),
				})
			},
		)),
		requestid.New(),
	}
}

func _v2Mw() []app.HandlerFunc {
	// your code...
	return nil
}

func _noteMw() []app.HandlerFunc {
	// your code...
	return []app.HandlerFunc{
		router.JwtMiddleware.MiddlewareFunc(),
	}
}

func _deletenoteMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _updatenoteMw() []app.HandlerFunc {
	// your code...
	return nil
}

func _querynoteMw() []app.HandlerFunc {
	// your code...
	return nil
}
